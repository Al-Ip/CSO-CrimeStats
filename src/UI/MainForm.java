/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Classes.Userreports;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.io.EOFException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javafx.application.Platform;
import javafx.embed.swing.JFXPanel;
import javafx.scene.chart.BarChart;
import javafx.scene.chart.CategoryAxis;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.PieChart;
import javafx.scene.chart.XYChart;
import javax.swing.JFrame;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.Scene;



/**
 *
 * @author k00229834
 */
public final class MainForm extends javax.swing.JFrame {

    CardLayout cl;
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        storePanels();  // Initialize card layout
        insertFromValidation(); // Set insert form label validation to not visible
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ExitDialog = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        YesButton = new javax.swing.JButton();
        NoButton = new javax.swing.JButton();
        MasterPanel = new javax.swing.JPanel();
        TitlePanel = new javax.swing.JPanel();
        TitleLabel = new javax.swing.JLabel();
        MenuPanel = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        MenuInsertButton = new javax.swing.JButton();
        MenuViewButton = new javax.swing.JButton();
        MenuRemoveButton = new javax.swing.JButton();
        MenuUpdateButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        DisplayPanel = new javax.swing.JPanel();
        DefaultPanel = new javax.swing.JPanel();
        Content_InsertPanel = new javax.swing.JPanel();
        insertForm = new javax.swing.JPanel();
        DescTextLabel = new javax.swing.JLabel();
        RegionLabel = new javax.swing.JLabel();
        RegionTextField = new javax.swing.JTextField();
        GardaDivLabel = new javax.swing.JLabel();
        GardDivTextField = new javax.swing.JTextField();
        OffenceCodeLabel = new javax.swing.JLabel();
        OffCodeTextField = new javax.swing.JTextField();
        OffenceLabel = new javax.swing.JLabel();
        OffenceTextField = new javax.swing.JTextField();
        TypeOffLabel = new javax.swing.JLabel();
        DateOccLabel = new javax.swing.JLabel();
        dateScrollList = new javax.swing.JScrollPane();
        dateList = new javax.swing.JList();
        acceptFormButton = new javax.swing.JButton();
        CancelFormButton = new javax.swing.JButton();
        NumOfOffencesLabel = new javax.swing.JLabel();
        numOfOffencesTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TypeOffTextField = new javax.swing.JList();
        insertTxtFieldWrongType = new javax.swing.JLabel();
        insertTxtFieldWrongType1 = new javax.swing.JLabel();
        insertTxtFieldWrongType2 = new javax.swing.JLabel();
        insertTxtFieldWrongType3 = new javax.swing.JLabel();
        insertTxtFieldWrongType4 = new javax.swing.JLabel();
        insertTxtFieldWrongType5 = new javax.swing.JLabel();
        insertTxtFieldWrongType6 = new javax.swing.JLabel();
        successPanel = new javax.swing.JPanel();
        text = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        userInsertedLabel = new javax.swing.JLabel();
        returnToInsertButton = new javax.swing.JButton();
        Content_RemovePanel = new javax.swing.JPanel();
        introText = new javax.swing.JLabel();
        successLabel = new javax.swing.JLabel();
        recordList = new javax.swing.JScrollPane();
        recordTable = new javax.swing.JTable();
        getFromDBText = new javax.swing.JLabel();
        refreshRemoveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        Content_UpdatePanel = new javax.swing.JPanel();
        updateFormPanel = new javax.swing.JPanel();
        DescTextLabel1 = new javax.swing.JLabel();
        RegionTextField1 = new javax.swing.JTextField();
        GardDivTextField1 = new javax.swing.JTextField();
        GardaDivLabel1 = new javax.swing.JLabel();
        RegionLabel1 = new javax.swing.JLabel();
        OffenceCodeLabel1 = new javax.swing.JLabel();
        OffCodeTextField1 = new javax.swing.JTextField();
        OffenceTextField1 = new javax.swing.JTextField();
        OffenceLabel1 = new javax.swing.JLabel();
        TypeOffLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TypeOffTextField1 = new javax.swing.JList();
        DateOccLabel1 = new javax.swing.JLabel();
        dateScrollList1 = new javax.swing.JScrollPane();
        dateList1 = new javax.swing.JList();
        NumOfOffencesLabel1 = new javax.swing.JLabel();
        numOfOffencesTextField1 = new javax.swing.JTextField();
        acceptFormButton1 = new javax.swing.JButton();
        CancelFormButton1 = new javax.swing.JButton();
        backToUpdateListButton = new javax.swing.JButton();
        insertTxtFieldWrongType7 = new javax.swing.JLabel();
        insertTxtFieldWrongType8 = new javax.swing.JLabel();
        insertTxtFieldWrongType9 = new javax.swing.JLabel();
        insertTxtFieldWrongType10 = new javax.swing.JLabel();
        insertTxtFieldWrongType11 = new javax.swing.JLabel();
        insertTxtFieldWrongType12 = new javax.swing.JLabel();
        insertTxtFieldWrongType13 = new javax.swing.JLabel();
        updateTablePanel = new javax.swing.JPanel();
        introText1 = new javax.swing.JLabel();
        successLabel1 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        refreshUpdateButton = new javax.swing.JButton();
        recordList1 = new javax.swing.JScrollPane();
        recordTable1 = new javax.swing.JTable();
        Content_ViewPanel = new javax.swing.JPanel();
        viewBeforePanel = new javax.swing.JPanel();
        viewText = new javax.swing.JLabel();
        barchartButton = new javax.swing.JButton();
        piechartButton = new javax.swing.JButton();
        projectedButton = new javax.swing.JButton();
        barText = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        piechartText = new javax.swing.JLabel();
        projectedText = new javax.swing.JLabel();
        picLabel1 = new javax.swing.JLabel();
        picLabel2 = new javax.swing.JLabel();
        picLabel3 = new javax.swing.JLabel();

        ExitDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ExitDialog.setAlwaysOnTop(true);
        ExitDialog.setLocation(new java.awt.Point(300, 300));
        ExitDialog.setMinimumSize(new java.awt.Dimension(275, 241));
        ExitDialog.setResizable(false);

        jPanel2.setBackground(new java.awt.Color(252, 89, 89));
        jPanel2.setMinimumSize(new java.awt.Dimension(275, 241));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Are You Sure You Wish To Exit?");

        jPanel3.setBackground(new java.awt.Color(193, 100, 100));

        YesButton.setText("Yes");
        YesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YesButtonActionPerformed(evt);
            }
        });

        NoButton.setText("No");
        NoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(YesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(NoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YesButton)
                    .addComponent(NoButton))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 11, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ExitDialogLayout = new javax.swing.GroupLayout(ExitDialog.getContentPane());
        ExitDialog.getContentPane().setLayout(ExitDialogLayout);
        ExitDialogLayout.setHorizontalGroup(
            ExitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ExitDialogLayout.setVerticalGroup(
            ExitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(java.awt.Color.lightGray);
        setLocation(new java.awt.Point(150, 150));
        setResizable(false);
        setSize(new java.awt.Dimension(500, 500));

        MasterPanel.setBackground(new java.awt.Color(62, 80, 91));

        TitlePanel.setBackground(new java.awt.Color(138, 176, 171));
        TitlePanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        TitleLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        TitleLabel.setText("Home");
        TitleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout TitlePanelLayout = new javax.swing.GroupLayout(TitlePanel);
        TitlePanel.setLayout(TitlePanelLayout);
        TitlePanelLayout.setHorizontalGroup(
            TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(517, 517, 517))
        );
        TitlePanelLayout.setVerticalGroup(
            TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addContainerGap())
        );

        MenuPanel.setBackground(new java.awt.Color(138, 176, 171));
        MenuPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Menu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        buttonPanel.setBackground(new java.awt.Color(255, 255, 255));

        MenuInsertButton.setBackground(new java.awt.Color(93, 129, 151));
        MenuInsertButton.setText("Insert Stats");
        MenuInsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuInsertButtonActionPerformed(evt);
            }
        });

        MenuViewButton.setBackground(new java.awt.Color(93, 129, 151));
        MenuViewButton.setText("View Stats");
        MenuViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuViewButtonActionPerformed(evt);
            }
        });

        MenuRemoveButton.setBackground(new java.awt.Color(93, 129, 151));
        MenuRemoveButton.setText("Remove Stats");
        MenuRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuRemoveButtonActionPerformed(evt);
            }
        });

        MenuUpdateButton.setBackground(new java.awt.Color(93, 129, 151));
        MenuUpdateButton.setText("Update Stats");
        MenuUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuUpdateButtonActionPerformed(evt);
            }
        });

        ExitButton.setBackground(new java.awt.Color(250, 107, 109));
        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(MenuViewButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MenuInsertButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MenuUpdateButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MenuRemoveButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ExitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(MenuInsertButton)
                .addGap(33, 33, 33)
                .addComponent(MenuRemoveButton)
                .addGap(35, 35, 35)
                .addComponent(MenuUpdateButton)
                .addGap(39, 39, 39)
                .addComponent(MenuViewButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExitButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout MenuPanelLayout = new javax.swing.GroupLayout(MenuPanel);
        MenuPanel.setLayout(MenuPanelLayout);
        MenuPanelLayout.setHorizontalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MenuPanelLayout.setVerticalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        DisplayPanel.setBackground(new java.awt.Color(138, 176, 171));
        DisplayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Display", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N
        DisplayPanel.setPreferredSize(new java.awt.Dimension(680, 520));

        DefaultPanel.setBackground(new java.awt.Color(255, 255, 255));
        DefaultPanel.setPreferredSize(new java.awt.Dimension(666, 500));

        javax.swing.GroupLayout DefaultPanelLayout = new javax.swing.GroupLayout(DefaultPanel);
        DefaultPanel.setLayout(DefaultPanelLayout);
        DefaultPanelLayout.setHorizontalGroup(
            DefaultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 666, Short.MAX_VALUE)
        );
        DefaultPanelLayout.setVerticalGroup(
            DefaultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 491, Short.MAX_VALUE)
        );

        Content_InsertPanel.setBackground(new java.awt.Color(255, 255, 255));
        Content_InsertPanel.setPreferredSize(new java.awt.Dimension(666, 500));

        insertForm.setBackground(new java.awt.Color(255, 255, 255));
        insertForm.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Insert Form"));
        insertForm.setMinimumSize(new java.awt.Dimension(317, 371));
        insertForm.setName(""); // NOI18N
        insertForm.setPreferredSize(new java.awt.Dimension(666, 490));

        DescTextLabel.setText("Welcome to the insert page. \nYou may enter a crime into the database here.");

        RegionLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        RegionLabel.setText("Region: ");

        RegionTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                RegionTextFieldKeyTyped(evt);
            }
        });

        GardaDivLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        GardaDivLabel.setText("Garda Division:");

        GardDivTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                GardDivTextFieldKeyTyped(evt);
            }
        });

        OffenceCodeLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        OffenceCodeLabel.setText("Offence Code:");

        OffCodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OffCodeTextFieldActionPerformed(evt);
            }
        });
        OffCodeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                OffCodeTextFieldKeyTyped(evt);
            }
        });

        OffenceLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        OffenceLabel.setText("Offence:");

        OffenceTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                OffenceTextFieldKeyTyped(evt);
            }
        });

        TypeOffLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TypeOffLabel.setText("Type of Offence:");

        DateOccLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        DateOccLabel.setText("Date Occurred:");

        dateList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "2003Q1", "2003Q2", "2003Q3", "2003Q4", "2004Q1", "2004Q2", "2004Q3", "2004Q4", "2005Q1", "2005Q2", "2005Q3", "2005Q4", "2006Q1", "2006Q2", "2006Q3", "2006Q4", "2007Q1", "2007Q2", "2007Q3", "2007Q4", "2008Q1", "2008Q2", "2008Q3", "2008Q4", "2009Q1", "2009Q2", "2009Q3", "2009Q4", "2010Q1", "2010Q2", "2010Q3", "2010Q4", "2011Q1", "2011Q2", "2011Q3", "2011Q4", "2012Q1", "2012Q2", "2012Q3", "2012Q4", "2013Q1", "2013Q2", "2013Q3", "2013Q4", "2014Q1", "2014Q2", "2014Q3", "2014Q4", "2015Q1", "2015Q2", "2015Q3", "2015Q4", "2016Q1", "2016Q2", "2016Q3", "2016Q4", "2017Q1", "2017Q2", "2017Q3", "2017Q4", "2018Q1", "2018Q2", "2018Q3", "2018Q4", "2019Q1", "2019Q2", "2019Q3" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        dateList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                dateListValueChanged(evt);
            }
        });
        dateScrollList.setViewportView(dateList);

        acceptFormButton.setText("Accept");
        acceptFormButton.setEnabled(false);
        acceptFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptFormButtonActionPerformed(evt);
            }
        });

        CancelFormButton.setText("Cancel");
        CancelFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelFormButtonActionPerformed(evt);
            }
        });

        NumOfOffencesLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        NumOfOffencesLabel.setText("Num of Offences:");

        numOfOffencesTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numOfOffencesTextFieldKeyTyped(evt);
            }
        });

        TypeOffTextField.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Homicide offences", "Sexual offences", "Attempts/threats to murder, assaults, harassments and related offences", "Dangerous or negligent acts,", "Kidnapping and related offences", "Robbery/extortion and hijacking offences", "Burglary and related offences", "Theft and related offences", "Fraud/ deception and related offences", "Controlled Drug offences", "Weapons and Explosives offences", "Damage to Property and to the Environment", "Public order and other social code offences", "Offences against government/ justice procedures and organisation of crime" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        TypeOffTextField.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                TypeOffTextFieldValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(TypeOffTextField);

        insertTxtFieldWrongType.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType.setText("Must be a string");

        insertTxtFieldWrongType1.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType1.setText("Must be a string");

        insertTxtFieldWrongType2.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType2.setText("Must be an Int");

        insertTxtFieldWrongType3.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType3.setText("Must be a string");

        insertTxtFieldWrongType4.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType4.setText("Must select one");

        insertTxtFieldWrongType5.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType5.setText("Must select one");

        insertTxtFieldWrongType6.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType6.setText("Must be an Int");

        javax.swing.GroupLayout insertFormLayout = new javax.swing.GroupLayout(insertForm);
        insertForm.setLayout(insertFormLayout);
        insertFormLayout.setHorizontalGroup(
            insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertFormLayout.createSequentialGroup()
                .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(insertFormLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(DescTextLabel))
                    .addGroup(insertFormLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(OffenceLabel)
                            .addComponent(OffenceCodeLabel)
                            .addComponent(GardaDivLabel)
                            .addComponent(RegionLabel)
                            .addComponent(TypeOffLabel)
                            .addComponent(DateOccLabel)
                            .addComponent(NumOfOffencesLabel))
                        .addGap(18, 18, 18)
                        .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(insertFormLayout.createSequentialGroup()
                                .addComponent(acceptFormButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CancelFormButton))
                            .addComponent(dateScrollList)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(OffCodeTextField)
                            .addComponent(GardDivTextField)
                            .addComponent(RegionTextField)
                            .addComponent(OffenceTextField)
                            .addComponent(numOfOffencesTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertTxtFieldWrongType)
                            .addComponent(insertTxtFieldWrongType1)
                            .addComponent(insertTxtFieldWrongType2)
                            .addComponent(insertTxtFieldWrongType3)
                            .addComponent(insertTxtFieldWrongType4)
                            .addComponent(insertTxtFieldWrongType5)
                            .addComponent(insertTxtFieldWrongType6))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        insertFormLayout.setVerticalGroup(
            insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertFormLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(DescTextLabel)
                .addGap(18, 18, 18)
                .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegionLabel)
                    .addComponent(insertTxtFieldWrongType))
                .addGap(18, 18, 18)
                .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GardDivTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GardaDivLabel)
                    .addComponent(insertTxtFieldWrongType1))
                .addGap(18, 18, 18)
                .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OffCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OffenceCodeLabel)
                    .addComponent(insertTxtFieldWrongType2))
                .addGap(18, 18, 18)
                .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OffenceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OffenceLabel)
                    .addComponent(insertTxtFieldWrongType3))
                .addGap(18, 18, 18)
                .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addGroup(insertFormLayout.createSequentialGroup()
                        .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TypeOffLabel)
                            .addComponent(insertTxtFieldWrongType4))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateScrollList, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateOccLabel)
                    .addComponent(insertTxtFieldWrongType5))
                .addGap(18, 18, 18)
                .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumOfOffencesLabel)
                    .addComponent(numOfOffencesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertTxtFieldWrongType6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(insertFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptFormButton)
                    .addComponent(CancelFormButton))
                .addContainerGap())
        );

        successPanel.setBackground(new java.awt.Color(144, 206, 144));
        successPanel.setPreferredSize(new java.awt.Dimension(666, 490));
        successPanel.setVisible(false);

        text.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        text.setText("Successfully Entered the crime into the database!\n");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Click on this button to get back to the insert page");

        userInsertedLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userInsertedLabel.setText("---");

        returnToInsertButton.setText("Return");
        returnToInsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnToInsertButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout successPanelLayout = new javax.swing.GroupLayout(successPanel);
        successPanel.setLayout(successPanelLayout);
        successPanelLayout.setHorizontalGroup(
            successPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(successPanelLayout.createSequentialGroup()
                .addGroup(successPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(text, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
                    .addGroup(successPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(successPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userInsertedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(successPanelLayout.createSequentialGroup()
                                .addComponent(returnToInsertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        successPanelLayout.setVerticalGroup(
            successPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(successPanelLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(userInsertedLabel)
                .addGap(94, 94, 94)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(returnToInsertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Content_InsertPanelLayout = new javax.swing.GroupLayout(Content_InsertPanel);
        Content_InsertPanel.setLayout(Content_InsertPanelLayout);
        Content_InsertPanelLayout.setHorizontalGroup(
            Content_InsertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(insertForm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(Content_InsertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(successPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        Content_InsertPanelLayout.setVerticalGroup(
            Content_InsertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(insertForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(Content_InsertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Content_InsertPanelLayout.createSequentialGroup()
                    .addComponent(successPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        Content_RemovePanel.setBackground(new java.awt.Color(255, 255, 255));
        Content_RemovePanel.setPreferredSize(new java.awt.Dimension(666, 490));

        introText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        introText.setText("Press refresh button to load records, select a record and press delete to remove.");
        introText.setToolTipText("");

        successLabel.setForeground(new java.awt.Color(51, 153, 0));

        recordTable.setAutoCreateRowSorter(true);
        recordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        recordTable.setRowHeight(20);
        recordTable.getTableHeader().setResizingAllowed(false);
        recordTable.getTableHeader().setReorderingAllowed(false);
        recordList.setViewportView(recordTable);

        refreshRemoveButton.setText("Refresh Table");
        refreshRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshRemoveButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Content_RemovePanelLayout = new javax.swing.GroupLayout(Content_RemovePanel);
        Content_RemovePanel.setLayout(Content_RemovePanelLayout);
        Content_RemovePanelLayout.setHorizontalGroup(
            Content_RemovePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Content_RemovePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Content_RemovePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(recordList, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
                    .addGroup(Content_RemovePanelLayout.createSequentialGroup()
                        .addComponent(getFromDBText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(successLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(Content_RemovePanelLayout.createSequentialGroup()
                        .addComponent(introText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteButton)
                        .addGap(18, 18, 18)
                        .addComponent(refreshRemoveButton)))
                .addContainerGap())
        );
        Content_RemovePanelLayout.setVerticalGroup(
            Content_RemovePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Content_RemovePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Content_RemovePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshRemoveButton)
                    .addGroup(Content_RemovePanelLayout.createSequentialGroup()
                        .addGroup(Content_RemovePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(introText)
                            .addComponent(deleteButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Content_RemovePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(successLabel)
                            .addComponent(getFromDBText))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recordList, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                .addContainerGap())
        );

        Content_UpdatePanel.setBackground(new java.awt.Color(255, 255, 255));
        Content_UpdatePanel.setMinimumSize(new java.awt.Dimension(0, 0));
        Content_UpdatePanel.setPreferredSize(new java.awt.Dimension(666, 490));

        updateFormPanel.setBackground(new java.awt.Color(255, 255, 255));
        updateFormPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Update Form"));
        updateFormPanel.setPreferredSize(new java.awt.Dimension(666, 490));
        updateFormPanel.setVisible(false);

        DescTextLabel1.setText("Welcome to the Update page. \nYou may update your selected record here. Hit accept when your finished.");

        RegionTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                RegionTextField1KeyTyped(evt);
            }
        });

        GardDivTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                GardDivTextField1KeyTyped(evt);
            }
        });

        GardaDivLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        GardaDivLabel1.setText("Garda Division:");

        RegionLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        RegionLabel1.setText("Region: ");

        OffenceCodeLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        OffenceCodeLabel1.setText("Offence Code:");

        OffCodeTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OffCodeTextField1ActionPerformed(evt);
            }
        });
        OffCodeTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                OffCodeTextField1KeyTyped(evt);
            }
        });

        OffenceTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                OffenceTextField1KeyTyped(evt);
            }
        });

        OffenceLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        OffenceLabel1.setText("Offence:");

        TypeOffLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TypeOffLabel1.setText("Type of Offence:");

        TypeOffTextField1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Homicide offences", "Sexual offences", "Attempts/threats to murder, assaults, harassments and related offences", "Dangerous or negligent acts,", "Kidnapping and related offences", "Robbery/extortion and hijacking offences", "Burglary and related offences", "Theft and related offences", "Fraud/ deception and related offences", "Controlled Drug offences", "Weapons and Explosives offences", "Damage to Property and to the Environment", "Public order and other social code offences", "Offences against government/ justice procedures and organisation of crime" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        TypeOffTextField1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                TypeOffTextField1ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(TypeOffTextField1);

        DateOccLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        DateOccLabel1.setText("Date Occurred:");

        dateList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "2003Q1", "2003Q2", "2003Q3", "2003Q4", "2004Q1", "2004Q2", "2004Q3", "2004Q4", "2005Q1", "2005Q2", "2005Q3", "2005Q4", "2006Q1", "2006Q2", "2006Q3", "2006Q4", "2007Q1", "2007Q2", "2007Q3", "2007Q4", "2008Q1", "2008Q2", "2008Q3", "2008Q4", "2009Q1", "2009Q2", "2009Q3", "2009Q4", "2010Q1", "2010Q2", "2010Q3", "2010Q4", "2011Q1", "2011Q2", "2011Q3", "2011Q4", "2012Q1", "2012Q2", "2012Q3", "2012Q4", "2013Q1", "2013Q2", "2013Q3", "2013Q4", "2014Q1", "2014Q2", "2014Q3", "2014Q4", "2015Q1", "2015Q2", "2015Q3", "2015Q4", "2016Q1", "2016Q2", "2016Q3", "2016Q4", "2017Q1", "2017Q2", "2017Q3", "2017Q4", "2018Q1", "2018Q2", "2018Q3", "2018Q4", "2019Q1", "2019Q2", "2019Q3" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        dateList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                dateList1ValueChanged(evt);
            }
        });
        dateScrollList1.setViewportView(dateList1);

        NumOfOffencesLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        NumOfOffencesLabel1.setText("Num of Offences:");

        numOfOffencesTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numOfOffencesTextField1KeyTyped(evt);
            }
        });

        acceptFormButton1.setText("Accept");
        acceptFormButton1.setEnabled(false);
        acceptFormButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptFormButton1ActionPerformed(evt);
            }
        });

        CancelFormButton1.setText("Cancel");
        CancelFormButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelFormButton1ActionPerformed(evt);
            }
        });

        backToUpdateListButton.setText("Back To Table");
        backToUpdateListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToUpdateListButtonActionPerformed(evt);
            }
        });

        insertTxtFieldWrongType7.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType7.setText("Must be a string");

        insertTxtFieldWrongType8.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType8.setText("Must be a string");

        insertTxtFieldWrongType9.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType9.setText("Must be an Int");

        insertTxtFieldWrongType10.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType10.setText("Must be a string");

        insertTxtFieldWrongType11.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType11.setText("Must select one");

        insertTxtFieldWrongType12.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType12.setText("Must select one");

        insertTxtFieldWrongType13.setForeground(new java.awt.Color(204, 0, 0));
        insertTxtFieldWrongType13.setText("Must be an Int");

        javax.swing.GroupLayout updateFormPanelLayout = new javax.swing.GroupLayout(updateFormPanel);
        updateFormPanel.setLayout(updateFormPanelLayout);
        updateFormPanelLayout.setHorizontalGroup(
            updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateFormPanelLayout.createSequentialGroup()
                .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateFormPanelLayout.createSequentialGroup()
                        .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(updateFormPanelLayout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(OffenceLabel1)
                                    .addComponent(OffenceCodeLabel1)
                                    .addComponent(GardaDivLabel1)
                                    .addComponent(RegionLabel1)
                                    .addComponent(TypeOffLabel1)
                                    .addComponent(DateOccLabel1)
                                    .addComponent(NumOfOffencesLabel1)))
                            .addGroup(updateFormPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(backToUpdateListButton)))
                        .addGap(18, 18, 18)
                        .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(updateFormPanelLayout.createSequentialGroup()
                                .addComponent(acceptFormButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CancelFormButton1))
                            .addComponent(dateScrollList1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(OffCodeTextField1)
                            .addComponent(GardDivTextField1)
                            .addComponent(RegionTextField1)
                            .addComponent(OffenceTextField1)
                            .addComponent(numOfOffencesTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertTxtFieldWrongType7)
                            .addComponent(insertTxtFieldWrongType8)
                            .addComponent(insertTxtFieldWrongType9)
                            .addComponent(insertTxtFieldWrongType10)
                            .addComponent(insertTxtFieldWrongType11)
                            .addComponent(insertTxtFieldWrongType12)
                            .addComponent(insertTxtFieldWrongType13)))
                    .addGroup(updateFormPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(DescTextLabel1)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        updateFormPanelLayout.setVerticalGroup(
            updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateFormPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(DescTextLabel1)
                .addGap(18, 18, 18)
                .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateFormPanelLayout.createSequentialGroup()
                        .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RegionTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegionLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(GardDivTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GardaDivLabel1)
                            .addComponent(insertTxtFieldWrongType8))
                        .addGap(18, 18, 18)
                        .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OffCodeTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OffenceCodeLabel1)
                            .addComponent(insertTxtFieldWrongType9))
                        .addGap(18, 18, 18)
                        .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OffenceTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OffenceLabel1)
                            .addComponent(insertTxtFieldWrongType10)))
                    .addComponent(insertTxtFieldWrongType7))
                .addGap(18, 18, 18)
                .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .addGroup(updateFormPanelLayout.createSequentialGroup()
                        .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TypeOffLabel1)
                            .addComponent(insertTxtFieldWrongType11))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateFormPanelLayout.createSequentialGroup()
                        .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateScrollList1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DateOccLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NumOfOffencesLabel1)
                            .addComponent(numOfOffencesTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insertTxtFieldWrongType13)))
                    .addComponent(insertTxtFieldWrongType12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptFormButton1)
                    .addComponent(CancelFormButton1)
                    .addComponent(backToUpdateListButton))
                .addContainerGap())
        );

        updateTablePanel.setBackground(new java.awt.Color(255, 255, 255));
        updateTablePanel.setPreferredSize(new java.awt.Dimension(666, 490));

        introText1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        introText1.setText("Refresh, select a row, click update button and follow instructions on next page.");
        introText1.setToolTipText("");

        successLabel1.setForeground(new java.awt.Color(51, 153, 0));

        updateButton.setText("Update");
        updateButton.setEnabled(false);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        refreshUpdateButton.setText("Refresh Table");
        refreshUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshUpdateButtonActionPerformed(evt);
            }
        });

        recordTable1.setAutoCreateRowSorter(true);
        recordTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        recordTable1.setRowHeight(20);
        recordTable1.getTableHeader().setResizingAllowed(false);
        recordTable1.getTableHeader().setReorderingAllowed(false);
        recordList1.setViewportView(recordTable1);

        javax.swing.GroupLayout updateTablePanelLayout = new javax.swing.GroupLayout(updateTablePanel);
        updateTablePanel.setLayout(updateTablePanelLayout);
        updateTablePanelLayout.setHorizontalGroup(
            updateTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateTablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(successLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(recordList1)
                    .addGroup(updateTablePanelLayout.createSequentialGroup()
                        .addComponent(introText1)
                        .addGap(18, 18, 18)
                        .addComponent(updateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(refreshUpdateButton)))
                .addContainerGap())
        );
        updateTablePanelLayout.setVerticalGroup(
            updateTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateTablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(introText1)
                    .addComponent(updateButton)
                    .addComponent(refreshUpdateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(successLabel1)
                .addGap(1, 1, 1)
                .addComponent(recordList1, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout Content_UpdatePanelLayout = new javax.swing.GroupLayout(Content_UpdatePanel);
        Content_UpdatePanel.setLayout(Content_UpdatePanelLayout);
        Content_UpdatePanelLayout.setHorizontalGroup(
            Content_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(updateTablePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(Content_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Content_UpdatePanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(updateFormPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        Content_UpdatePanelLayout.setVerticalGroup(
            Content_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(updateTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(Content_UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Content_UpdatePanelLayout.createSequentialGroup()
                    .addComponent(updateFormPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 22, Short.MAX_VALUE)))
        );

        Content_ViewPanel.setBackground(new java.awt.Color(255, 255, 255));
        Content_ViewPanel.setMinimumSize(new java.awt.Dimension(439, 539));
        Content_ViewPanel.setPreferredSize(new java.awt.Dimension(666, 490));

        viewBeforePanel.setBackground(new java.awt.Color(255, 255, 255));
        viewBeforePanel.setPreferredSize(new java.awt.Dimension(666, 490));

        viewText.setText("Welcome to the view page. Here you can view the various stat data in a multitude of ways.");

        barchartButton.setText("Bar Chart");
        barchartButton.setActionCommand("BarChart");
        barchartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barchartButtonActionPerformed(evt);
            }
        });

        piechartButton.setText("Pie Chart");
        piechartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                piechartButtonActionPerformed(evt);
            }
        });

        projectedButton.setText("Projected Values");
        projectedButton.setPreferredSize(new java.awt.Dimension(77, 23));

        barText.setText("Click on this button to view a bar chart of the statistics from the database");

        piechartText.setText("Click on this button to view a pie chart of the statistics from the database");

        projectedText.setText("Click on this button to view a projected value graph of the statistics from the database\n");

        picLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/images/bar1.png"))); // NOI18N

        picLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/images/pie1.png"))); // NOI18N

        picLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/images/pred1.jpg"))); // NOI18N

        javax.swing.GroupLayout viewBeforePanelLayout = new javax.swing.GroupLayout(viewBeforePanel);
        viewBeforePanel.setLayout(viewBeforePanelLayout);
        viewBeforePanelLayout.setHorizontalGroup(
            viewBeforePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewBeforePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewBeforePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewBeforePanelLayout.createSequentialGroup()
                        .addGroup(viewBeforePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, viewBeforePanelLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(picLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(viewBeforePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(piechartText, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewBeforePanelLayout.createSequentialGroup()
                                        .addComponent(piechartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(122, 122, 122))))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, viewBeforePanelLayout.createSequentialGroup()
                                .addComponent(viewText)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(viewBeforePanelLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(picLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                                .addGroup(viewBeforePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(projectedText, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewBeforePanelLayout.createSequentialGroup()
                                        .addComponent(projectedButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(123, 123, 123)))))
                        .addContainerGap())
                    .addGroup(viewBeforePanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(picLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(viewBeforePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewBeforePanelLayout.createSequentialGroup()
                                .addComponent(barText)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewBeforePanelLayout.createSequentialGroup()
                                .addComponent(barchartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(126, 126, 126))))))
        );
        viewBeforePanelLayout.setVerticalGroup(
            viewBeforePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewBeforePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewText)
                .addGap(18, 18, 18)
                .addGroup(viewBeforePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewBeforePanelLayout.createSequentialGroup()
                        .addComponent(picLabel1)
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewBeforePanelLayout.createSequentialGroup()
                        .addComponent(barText)
                        .addGap(38, 38, 38)
                        .addComponent(barchartButton)
                        .addGap(54, 54, 54)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(viewBeforePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewBeforePanelLayout.createSequentialGroup()
                        .addComponent(piechartText)
                        .addGap(39, 39, 39)
                        .addComponent(piechartButton))
                    .addComponent(picLabel2))
                .addGap(25, 25, 25)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(viewBeforePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewBeforePanelLayout.createSequentialGroup()
                        .addComponent(picLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(viewBeforePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(projectedText)
                        .addGap(45, 45, 45)
                        .addComponent(projectedButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );

        javax.swing.GroupLayout Content_ViewPanelLayout = new javax.swing.GroupLayout(Content_ViewPanel);
        Content_ViewPanel.setLayout(Content_ViewPanelLayout);
        Content_ViewPanelLayout.setHorizontalGroup(
            Content_ViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewBeforePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        Content_ViewPanelLayout.setVerticalGroup(
            Content_ViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewBeforePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout DisplayPanelLayout = new javax.swing.GroupLayout(DisplayPanel);
        DisplayPanel.setLayout(DisplayPanelLayout);
        DisplayPanelLayout.setHorizontalGroup(
            DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Content_InsertPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Content_RemovePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Content_ViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(DisplayPanelLayout.createSequentialGroup()
                    .addComponent(DefaultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Content_UpdatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        DisplayPanelLayout.setVerticalGroup(
            DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Content_InsertPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Content_RemovePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Content_ViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(DisplayPanelLayout.createSequentialGroup()
                    .addComponent(DefaultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 48, Short.MAX_VALUE)))
            .addGroup(DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Content_UpdatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout MasterPanelLayout = new javax.swing.GroupLayout(MasterPanel);
        MasterPanel.setLayout(MasterPanelLayout);
        MasterPanelLayout.setHorizontalGroup(
            MasterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MasterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MasterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TitlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MasterPanelLayout.createSequentialGroup()
                        .addComponent(MenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DisplayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        MasterPanelLayout.setVerticalGroup(
            MasterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MasterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(MasterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DisplayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MasterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MasterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        ExitDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        ExitDialog.setVisible(true);
        
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void NoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoButtonActionPerformed
        ExitDialog.setVisible(false);
    }//GEN-LAST:event_NoButtonActionPerformed

    private void YesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YesButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_YesButtonActionPerformed

    private void MenuInsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuInsertButtonActionPerformed
        //
        //          INSERT BUTTON CLICK EVENT
        //Once clicked make the appropriate Insert panel visible, while making the rest hidden
        //
        CardLayout card = (CardLayout)(DefaultPanel.getLayout());
        insertFromValidation(); // Set validation labels false before loading insert panel
        card.show(DefaultPanel, "Insert");
        
    }//GEN-LAST:event_MenuInsertButtonActionPerformed

    private void MenuRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuRemoveButtonActionPerformed
        //
        //          REMOVE BUTTON CLICK EVENT
        //Once clicked make the appropriate Remove panel visible, while making the rest hidden
        //
        CardLayout card = (CardLayout)(DefaultPanel.getLayout());
        card.show(DefaultPanel, "Remove");
    }//GEN-LAST:event_MenuRemoveButtonActionPerformed

    private void MenuUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuUpdateButtonActionPerformed
        //
        //          UPDATE BUTTON CLICK EVENT
        // Once clicked make the appropriate Update panel visible, while making the rest hidden
        //
        CardLayout card = (CardLayout)(DefaultPanel.getLayout());
        card.show(DefaultPanel, "Update");
    }//GEN-LAST:event_MenuUpdateButtonActionPerformed

    private void OffCodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OffCodeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OffCodeTextFieldActionPerformed

    private void CancelFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelFormButtonActionPerformed
        //
        //          CANCEL BUTTON FORM CLICK EVENT
        // Once clicked make the insert form will clear its serverIDText fields
        //
        RegionTextField.setText("");
        GardDivTextField.setText("");
        OffCodeTextField.setText("");
        OffenceTextField.setText("");
        TypeOffTextField.clearSelection();
        dateList.clearSelection();
        numOfOffencesTextField.setText("");
        
        acceptFormButton.setEnabled(false); // Turn the insert form button back to disabled
    }//GEN-LAST:event_CancelFormButtonActionPerformed

    private void acceptFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptFormButtonActionPerformed
        try {
            processInsertInfo();      
        } catch (IOException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_acceptFormButtonActionPerformed

    private void returnToInsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnToInsertButtonActionPerformed
        RegionTextField.setText("");
        GardDivTextField.setText("");
        OffCodeTextField.setText("");
        OffenceTextField.setText("");
        TypeOffTextField.clearSelection();
        numOfOffencesTextField.setText("");
        dateList.clearSelection();
        
        successPanel.setVisible(false); // Hide the success panel
        acceptFormButton.setEnabled(false); // Turn the insert form button back to disabled
        insertForm.setVisible(true); // show insert form
    }//GEN-LAST:event_returnToInsertButtonActionPerformed
  
    private void MenuViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuViewButtonActionPerformed
        //
        //          VIEW BUTTON CLICK EVENT
        // Once clicked make the appropriate View panel visible, while making the rest hidden
        //
        CardLayout card = (CardLayout)(DefaultPanel.getLayout());
        card.show(DefaultPanel, "View");        
    }//GEN-LAST:event_MenuViewButtonActionPerformed

    private void refreshRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshRemoveButtonActionPerformed
        try {  
            // check if selected row before loading the table
            checkSelectedDeleteButton();
            processLoadTable();
        }  catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshRemoveButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            processDeleteSelected();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void refreshUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshUpdateButtonActionPerformed
        try {
            checkSelectedUpdateButton();
            processLoadTable();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshUpdateButtonActionPerformed

    private void OffCodeTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OffCodeTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OffCodeTextField1ActionPerformed

    private void acceptFormButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptFormButton1ActionPerformed
        try {
            processUpdate();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_acceptFormButton1ActionPerformed

    private void CancelFormButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelFormButton1ActionPerformed
        // Clear the text fields
        RegionTextField1.setText("");
        GardDivTextField1.setText("");
        OffCodeTextField1.setText("");
        OffenceTextField1.setText("");
        TypeOffTextField1.clearSelection();
        dateList1.clearSelection();
        numOfOffencesTextField1.setText("");
        
        acceptFormButton1.setEnabled(false); // Turn the update form button back to disabled
    }//GEN-LAST:event_CancelFormButton1ActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try {
            updateTablePanel.setVisible(false);
            updateFormPanel.setVisible(true);
            acceptFormButton1.setEnabled(true); // Turn the update form button back to disabled
            processBeforeUpdate();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void backToUpdateListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToUpdateListButtonActionPerformed
        updateFormPanel.setVisible(false);
        updateTablePanel.setVisible(true);
    }//GEN-LAST:event_backToUpdateListButtonActionPerformed

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Insert Form Label Checks
    //
    private void RegionTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegionTextFieldKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || (c ==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE) || (c==KeyEvent.VK_SPACE)))
        {
            // Disable key event, the consume means it wont be typed
            evt.consume();
            insertTxtFieldWrongType.setVisible(true);
        }
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType.setVisible(false);
        }
    }//GEN-LAST:event_RegionTextFieldKeyTyped

    private void OffCodeTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OffCodeTextFieldKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c ==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))
        {
            // Disable key event, the consume means it wont be typed
            evt.consume();
            insertTxtFieldWrongType2.setVisible(true);
        }
        else{
            checktInputFields();
            insertTxtFieldWrongType2.setVisible(false);
        }
    }//GEN-LAST:event_OffCodeTextFieldKeyTyped

    private void GardDivTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GardDivTextFieldKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || (c ==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE) || (c==KeyEvent.VK_SPACE)))
        {
            // Disable key event, the consume means it wont be typed
            evt.consume();
            insertTxtFieldWrongType1.setVisible(true);
        }
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType1.setVisible(false);
        }
    }//GEN-LAST:event_GardDivTextFieldKeyTyped

    private void OffenceTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OffenceTextFieldKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || (c ==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE) || (c==KeyEvent.VK_SPACE)))
        {
            // Disable key event, the consume means it wont be typed
            evt.consume();
            insertTxtFieldWrongType3.setVisible(true);
        }
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType3.setVisible(false);
        }
    }//GEN-LAST:event_OffenceTextFieldKeyTyped

    private void TypeOffTextFieldValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_TypeOffTextFieldValueChanged
        if(TypeOffTextField.isSelectionEmpty())
            insertTxtFieldWrongType4.setVisible(true);
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType4.setVisible(false);
        }
    }//GEN-LAST:event_TypeOffTextFieldValueChanged

    private void dateListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_dateListValueChanged
        if(dateList.isSelectionEmpty())
            insertTxtFieldWrongType5.setVisible(true);
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType5.setVisible(false);
        }
    }//GEN-LAST:event_dateListValueChanged

    private void numOfOffencesTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numOfOffencesTextFieldKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c ==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))
        {
            // Disable key event, the consume means it wont be typed
            evt.consume();
            insertTxtFieldWrongType6.setVisible(true);
        }
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType6.setVisible(false);
        }
    }//GEN-LAST:event_numOfOffencesTextFieldKeyTyped

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Update Form Label Checks
    //
    private void RegionTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegionTextField1KeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || (c ==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE) || (c==KeyEvent.VK_SPACE)))
        {
            // Disable key event, the consume means it wont be typed
            evt.consume();
            insertTxtFieldWrongType7.setVisible(true);
        }
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType7.setVisible(false);
        }
    }//GEN-LAST:event_RegionTextField1KeyTyped

    private void GardDivTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GardDivTextField1KeyTyped
       char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || (c ==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE) || (c==KeyEvent.VK_SPACE)))
        {
            // Disable key event, the consume means it wont be typed
            evt.consume();
            insertTxtFieldWrongType8.setVisible(true);
        }
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType8.setVisible(false);
        }
    }//GEN-LAST:event_GardDivTextField1KeyTyped

    private void OffCodeTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OffCodeTextField1KeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c ==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))
        {
            // Disable key event, the consume means it wont be typed
            evt.consume();
            insertTxtFieldWrongType9.setVisible(true);
        }
        else{
            checktInputFields();
            insertTxtFieldWrongType9.setVisible(false);
        }
    }//GEN-LAST:event_OffCodeTextField1KeyTyped

    private void OffenceTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OffenceTextField1KeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || (c ==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE) || (c==KeyEvent.VK_SPACE)))
        {
            // Disable key event, the consume means it wont be typed
            evt.consume();
            insertTxtFieldWrongType10.setVisible(true);
        }
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType10.setVisible(false);
        }
    }//GEN-LAST:event_OffenceTextField1KeyTyped

    private void TypeOffTextField1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_TypeOffTextField1ValueChanged
        if(TypeOffTextField1.isSelectionEmpty())
            insertTxtFieldWrongType11.setVisible(true);
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType11.setVisible(false);
        }
    }//GEN-LAST:event_TypeOffTextField1ValueChanged

    private void dateList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_dateList1ValueChanged
        if(dateList1.isSelectionEmpty())
            insertTxtFieldWrongType12.setVisible(true);
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType12.setVisible(false);
        }
    }//GEN-LAST:event_dateList1ValueChanged

    private void numOfOffencesTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numOfOffencesTextField1KeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c ==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))
        {
            // Disable key event, the consume means it wont be typed
            evt.consume();
            insertTxtFieldWrongType13.setVisible(true);
        }
        else{
            checktInputFields(); //Check if every input is entered in order to enable the accept button
            insertTxtFieldWrongType13.setVisible(false);
        }
    }//GEN-LAST:event_numOfOffencesTextField1KeyTyped

    private void barchartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barchartButtonActionPerformed
        try {
            initAndShowBarGUI();
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_barchartButtonActionPerformed

    private void piechartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_piechartButtonActionPerformed
        initAndShowPieGUI();
    }//GEN-LAST:event_piechartButtonActionPerformed

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Process the inserting of a record into the database function
    //
    // The client is sending to the server what they entered into the textfields and selected in the list. It gets processed and
    // the server sends back the new id of the created entry.
    public void processInsertInfo() throws UnknownHostException, IOException {
        // Initialize variables
        InetAddress ip = InetAddress.getByName("localhost"); 
        Socket s = new Socket(ip, 5000); 
        ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream());
        ObjectInputStream in = new ObjectInputStream(s.getInputStream());
        String serverText = null;

        // For the switch statement in the server to indicate which function to run
        String tosend = "Insert"; 
        out.writeUTF(tosend);
        out.flush();

        try
        {
            // get data entered into the serverIDText field and store appropriately 
            String region = RegionTextField.getText();
            String gardDiv = GardDivTextField.getText();
            int offCode =  Integer.parseInt(OffCodeTextField.getText());
            String offence = OffenceTextField.getText();
            String typeOff = TypeOffTextField.getSelectedValue().toString();
            String date = dateList.getSelectedValue().toString();
            int numOffence = Integer.parseInt(numOfOffencesTextField.getText());
            out.writeObject(new Userreports(region, gardDiv, offCode, offence, typeOff, date, numOffence));
            out.flush();

            // Here we read the details from server
            serverText = in.readUTF();
                    userInsertedLabel.setText("The server responded: " + serverText);
                    insertForm.setVisible(false);
                    successPanel.setVisible(true);
        }    
        catch(NumberFormatException | IOException ex){  
        }
        // closing data input / output streams
        finally
        {  
            out.close();
            in.close();
        }
    }
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Process the loading of a records from the database function
    //
    // The client is loading the data sent from the database and storing them into variables that are used to create a row objects
    // which is then used to display in the record table.  
    public void processLoadTable() throws UnknownHostException, IOException, ClassNotFoundException {
        // Initialize variables
        boolean EOF=false;
        InetAddress ip = InetAddress.getByName("localhost"); 
        Socket s = new Socket(ip, 5000); 
        ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream());
        ObjectInputStream in = new ObjectInputStream(s.getInputStream());
        DefaultTableModel model = new DefaultTableModel(new String[]{"ID", "Region", "GardaDivision", "OffenceCode", "Offence", "TypeOfOffence", "Date", "numOfOffences"}, 0)
        {
            //  this function calls the super constructor and passes the data we gave up above in the model so that it becomes uneditable
            @Override
            public boolean isCellEditable(int row, int column){  
                return false;  
            }  
        };

        // Set the success serverIDText back to null after delete function
        successLabel.setText("");
        
        // Set the success serverIDText back to null after update function
        successLabel1.setText("");

        // For the switch statement in the server to indicate which function to run
        String tosends = "Refresh"; 
        out.writeUTF(tosends); 
        out.flush();
        
        try{
            do {
                String one = in.readUTF();
                String two =in.readUTF();
                String three =in.readUTF();
                int four = in.readInt();
                String five = in.readUTF();
                String six = in.readUTF();
                String seven = in.readUTF();
                int eight = in.readInt();
                model.addRow(new Object[]{one, two, three, four, five, six, seven, eight});
            }while(!EOF );
        // Had some issues refreshing the table, used dis.Available() but it gave an estimate of bytes
        // So i made the file exception return boolean to signal the end of all the records which worked like a charm
         } catch( EOFException eof ){
             EOF = true;
         }
        // closing data input / output streams
        finally{
            recordTable.setModel(model);
            recordTable1.setModel(model); // also setting the update table to the same model 
            out.close();
            in.close();
        }
    }
     
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Process the deleting of a record from the database function
    //
    // The client is taking what row the user selected and sending that to the server to specifiy exactly what id to delete via 
    // a prepared statement. After, the server sends back a confirmation in the form of the deleted id to alert the client.
    public void processDeleteSelected() throws UnknownHostException, IOException, ClassNotFoundException {
        // Initialize variables 
        InetAddress ip = InetAddress.getByName("localhost"); 
        Socket s = new Socket(ip, 5000); 
        ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream());
        ObjectInputStream in = new ObjectInputStream(s.getInputStream());  
        int text=0;
        
        // For the switch statement in the server to indicate which function to run
        String tosends = "Delete"; 
        out.writeUTF(tosends); 
        out.flush();
        
        try
        {
            // first column if, since the first column is always going to be that of id, we set this to 0
            int column = 0;
            int row = recordTable.getSelectedRow();
            String value = recordTable.getModel().getValueAt(row, column).toString();
            out.writeUTF(value);
            out.flush();
            
            // read in from the server the just deleted id as confirmation
             text = in.readInt();
             successLabel.setText("Successfully Deleted the listing with ID: " + text + " // (NOTE press refresh to see the update)");
        }    
        catch(NumberFormatException ex){  
        }
        // closing data input / output streams
        finally
        {  
            out.close();
            in.close();
        }      
     }
     
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Process the updating of a record from the database function
     //
     // 
     public void processBeforeUpdate() throws UnknownHostException, IOException, ClassNotFoundException {
        // Initialize variables 
        InetAddress ip = InetAddress.getByName("localhost"); 
        Socket s = new Socket(ip, 5000); 
        ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream());
        ObjectInputStream in = new ObjectInputStream(s.getInputStream()); 
        boolean EOF=false;
        Userreports received = null;
        
        // For the switch statement in the server to indicate which function to run
        String tosends = "BeforeUpdate"; 
        out.writeUTF(tosends); 
        out.flush();
        
        try
        {
            // first column if, since the first column is always going to be that of id, we set this to 0
            int column = 0;
            int row = recordTable1.getSelectedRow();
            String value = recordTable1.getModel().getValueAt(row, column).toString();
            out.writeUTF(value);
            out.flush();
            
            // receive the object from the server with the data from the selected id then set that 
            // data to the respective textfields and lists
            do {
                 received = (Userreports) in.readObject();
                 RegionTextField1.setText(received.getRegion());
                 GardDivTextField1.setText(received.getGardaDivision());
                 OffCodeTextField1.setText(Integer.toString(received.getOffenceCode()));
                 OffenceTextField1.setText(received.getOffence());
                 TypeOffTextField1.setSelectedValue(received.getTypeOfOffence(), EOF);
                 dateList1.setSelectedValue(received.getDate(), EOF);
                 numOfOffencesTextField1.setText(Integer.toString(received.getNumOfOffences()));
            }while(!EOF );    
        }catch( EOFException eof ){
             EOF = true;
         }catch(NumberFormatException ex){   }
        // closing data input / output streams
        finally
        {  
            out.close();
            in.close();
        }         
     }
     
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Process the updating of a record from the database function
     //
     // 
     public void processUpdate() throws UnknownHostException, IOException, ClassNotFoundException {
        // Initialize variables 
        InetAddress ip = InetAddress.getByName("localhost"); 
        Socket s = new Socket(ip, 5000); 
        ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream());
        ObjectInputStream in = new ObjectInputStream(s.getInputStream()); 
        boolean EOF=false;
        Userreports received = null;
        int serverIDText=0;
        
        // For the switch statement in the server to indicate which function to run
        String tosends = "Update"; 
        out.writeUTF(tosends); 
        out.flush();
        
        try
        {    
            // get data entered into the serverIDText field and store appropriately 
            String region = RegionTextField1.getText();
            String gardDiv = GardDivTextField1.getText();
            int offCode =  Integer.parseInt(OffCodeTextField1.getText());
            String offence = OffenceTextField1.getText();
            String typeOff = TypeOffTextField1.getSelectedValue().toString();
            String date = dateList1.getSelectedValue().toString();
            int numOffence = Integer.parseInt(numOfOffencesTextField1.getText());
            out.writeObject(new Userreports(region, gardDiv, offCode, offence, typeOff, date, numOffence));
            out.flush();
            
            // first column if, since the first column is always going to be that of id, we set this to 0
            int column = 0;
            int row = recordTable1.getSelectedRow();
            String value = recordTable1.getModel().getValueAt(row, column).toString();
            System.out.println("[CLIENT DEBUGGING]: Sending id value of: " + value);
            out.writeUTF(value);
            out.flush();

            // Here we read the details from server to display to user that the update was successful
            serverIDText = in.readInt();
                    successLabel1.setText("Successfully Updated the listing with ID: " + serverIDText + " // (NOTE press refresh to see the update)");
                    updateFormPanel.setVisible(false); // Hide update form 
                    acceptFormButton1.setEnabled(false); // Set update form accept button to false
                    updateTablePanel.setVisible(true); // Show table again 
        }    
        catch(NumberFormatException | IOException ex){  
        }
        // closing data input / output streams
        finally
        {  
            out.close();
            in.close();
        }         
     }
     
     
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Initialize and show GUI. Due to javaFX being a pain in the @#'"£% I found a solution that involves adding the 
     // JFXPanel to a regular swing JFrame panel and displaying the results
     // 
     private static void initAndShowBarGUI() {
         // This method is invoked on the EDT thread
         JFrame frame = new JFrame("BarChartJFrame");
         final JFXPanel fxPanel = new JFXPanel();
         frame.add(fxPanel);
         frame.setSize(1100, 800);
         frame.setVisible(true);

         Platform.runLater(new Runnable() {
             @Override
             public void run() {
                 try {
                     initBarFX(fxPanel);
                 } catch (IOException ex) {
                     Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                 }
             }
         });
     }
     
     
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Create the Scene and populate the chart with data
     //
     // 
     public static Scene createBarScene() throws IOException {
        // Initialize variables
        boolean EOF=false;
        InetAddress ip = InetAddress.getByName("localhost"); 
        Socket s = new Socket(ip, 5000); 
        ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream());
        ObjectInputStream in = new ObjectInputStream(s.getInputStream());
        
        // For the switch statement in the server to indicate which function to run
        String tosends = "Chart"; 
        out.writeUTF(tosends); 
        out.flush();
        
        //------------------------------------------------------------------
        //
        //
        final CategoryAxis xAxis = new CategoryAxis();
        final NumberAxis yAxis = new NumberAxis();
        final BarChart<String, Number> bc = new BarChart<>(xAxis,
                yAxis);
        bc.setTitle("Offences Summary");
        xAxis.setLabel("Offence Type");
        yAxis.setLabel("Num of Occurances");
        
        XYChart.Series series1 = new XYChart.Series();
        XYChart.Series series2 = new XYChart.Series();
        XYChart.Series series3 = new XYChart.Series();
        Scene scene = new Scene(bc, 800, 600);
        String type="";
        int number=0;
        String date="";
        try
        {              
            do {
                type = in.readUTF();
                number = in.readInt();
                date = in.readUTF();
                series1.setName(date);
                //series2.setName(date);
                //series3.setName(date);
                series1.getData().add(new XYChart.Data(type, number));
                //series2.getData().add(new XYChart.Data(type, number));
                //series3.getData().add(new XYChart.Data(type, number));
            }while(!EOF );
         } catch( EOFException eof ){
             EOF = true;
         }
        // closing data input / output streams
        finally
        {  
            //bc.getData().addAll(series1, series2, series3);
            bc.getData().addAll(series1);
            out.close();
            in.close();
        }
        return (scene);
    }
     
     
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Initialize the Bar chart JavaFX panel with the barScene
     //
     // 
     private static void initBarFX(JFXPanel fxPanel) throws IOException {
        // This method is invoked on the JavaFX thread
        Scene barScene = createBarScene();
        fxPanel.setScene(barScene);
    }

     
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Initialize and show GUI. Due to javaFX being a pain in the @#'"£% I found a solution that involves adding the 
     // JFXPanel to a regular swing JFrame panel and displaying the results
     // 
     private static void initAndShowPieGUI() {
         // This method is invoked on the EDT thread
         JFrame frame = new JFrame("PieChartJFrame");
         final JFXPanel fxPanel = new JFXPanel();
         frame.add(fxPanel);
         frame.setSize(1100, 800);
         frame.setVisible(true);

         Platform.runLater(new Runnable() {
             @Override
             public void run() {
                 try {
                     initPieFX(fxPanel);
                 } catch (IOException ex) {
                     Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                 }
             }
         });
     }
     
     
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Create the Scene and populate the chart with data
     //
     // 
     public static Scene createPieScene() throws IOException {
        // Initialize variables
        boolean EOF=false;
        InetAddress ip = InetAddress.getByName("localhost"); 
        Socket s = new Socket(ip, 5000); 
        ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream());
        ObjectInputStream in = new ObjectInputStream(s.getInputStream());
        
        // For the switch statement in the server to indicate which function to run
        String tosends = "Chart"; 
        out.writeUTF(tosends); 
        out.flush();

        ObservableList<PieChart.Data> pieChartData = FXCollections.observableArrayList();
        final PieChart chart = new PieChart(pieChartData);
        chart.setTitle("Offences Summary");
        Scene scene = new Scene(chart, 800, 600);
        String type="";
        int number=0;
        String date="";
        try
        {              
            do {
                type = in.readUTF();
                number = in.readInt();
                date = in.readUTF();
                pieChartData = FXCollections.observableArrayList(
                new PieChart.Data(type, number));
                chart.getData().addAll(pieChartData);
            }while(!EOF );      
         } catch( EOFException eof ){
             EOF = true;
         }
        // closing data input / output streams
        finally
        {  
            //chart.getData().addAll(pieChartData);
            //chart.setVisible(true);
            out.close();
            in.close();
        }
        return (scene);
    }
     
     
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Initialize the Bar chart JavaFX panel with the barScene
     //
     // 
     private static void initPieFX(JFXPanel fxPanel) throws IOException {
        // This method is invoked on the JavaFX thread
        Scene pieScene = createPieScene();
        fxPanel.setScene(pieScene);
    }
     
     
     
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Using card layout to store and display panels 
     //
     // 
     public void storePanels()
     {
         cl = new CardLayout();
         DefaultPanel.setLayout(cl);
         DefaultPanel.add(Content_InsertPanel, "Insert");
         DefaultPanel.add(Content_RemovePanel, "Remove");
         DefaultPanel.add(Content_UpdatePanel, "Update");
         DefaultPanel.add(Content_ViewPanel, "View"); 
     }
     
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Making all insert form validation labels hidden
     //
     // 
     public void insertFromValidation()
     {
         //Set the insert validation labels to false
         insertTxtFieldWrongType.setVisible(false);
         insertTxtFieldWrongType1.setVisible(false);
         insertTxtFieldWrongType2.setVisible(false);
         insertTxtFieldWrongType3.setVisible(false);
         insertTxtFieldWrongType4.setVisible(true);
         insertTxtFieldWrongType5.setVisible(true);
         insertTxtFieldWrongType6.setVisible(false); 
         
         //Set the update validation labels to false
         insertTxtFieldWrongType7.setVisible(false);
         insertTxtFieldWrongType8.setVisible(false);
         insertTxtFieldWrongType9.setVisible(false);
         insertTxtFieldWrongType10.setVisible(false);
         insertTxtFieldWrongType11.setVisible(false);
         insertTxtFieldWrongType12.setVisible(false);
         insertTxtFieldWrongType13.setVisible(false); 
     }
    
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Function to check if a row in the table is selected before clicking the delete button and getting an error
     //
     // 
     public void checkSelectedDeleteButton()
     {
         // make remove and update button inaccessible until a row is selected
         deleteButton.setEnabled(false);
         ListSelectionModel listSelectionModel = recordTable.getSelectionModel();
        // selection listener event that occurs when something in the table is changes i.e when a row is selected
         listSelectionModel.addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) { 
            ListSelectionModel lsm = (ListSelectionModel)e.getSource();
            deleteButton.setEnabled(!lsm.isSelectionEmpty()); // set button enable if a selection is not empty
        };
         });
     } 
     
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Function to check if a row in the table is selected before clicking the update button and getting an error
     //
     // 
     public void checkSelectedUpdateButton()
     {
         // make remove and update button inaccessible until a row is selected
         updateButton.setEnabled(false);
         ListSelectionModel listSelectionModel = recordTable1.getSelectionModel();
        // selection listener event that occurs when something in the table is changes i.e when a row is selected
         listSelectionModel.addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) { 
            ListSelectionModel lsm = (ListSelectionModel)e.getSource();
            updateButton.setEnabled(!lsm.isSelectionEmpty()); // set button enable if a selection is not empty
        };
         });
     } 
        
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     // Function to check if all the text and selection fields of the insert and update form are 
     // entered before enabling the accept button for both
     //
     public void checktInputFields()
     {    
        // This section checks for the insert form labels      
        boolean value = !RegionTextField.getText().trim().isEmpty() && !GardDivTextField.getText().trim().isEmpty()
                && !OffCodeTextField.getText().trim().isEmpty() && !OffenceTextField.getText().trim().isEmpty() 
                && !numOfOffencesTextField.getText().trim().isEmpty() && TypeOffTextField.getSelectedValue() != null
                && dateList.getSelectedValue() != null;
        acceptFormButton.setEnabled(value);
        
        // This section checks for the update form labels
        boolean value1 = !RegionTextField1.getText().trim().isEmpty() && !GardDivTextField1.getText().trim().isEmpty()
                && !OffCodeTextField1.getText().trim().isEmpty() && !OffenceTextField1.getText().trim().isEmpty() 
                && !numOfOffencesTextField1.getText().trim().isEmpty() && TypeOffTextField1.getSelectedValue() != null
                && dateList1.getSelectedValue() != null;
        acceptFormButton1.setEnabled(value1);
     }
    
    
    /**
     * @param args the command line arguments
     */
     public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelFormButton;
    private javax.swing.JButton CancelFormButton1;
    private javax.swing.JPanel Content_InsertPanel;
    private javax.swing.JPanel Content_RemovePanel;
    private javax.swing.JPanel Content_UpdatePanel;
    private javax.swing.JPanel Content_ViewPanel;
    private javax.swing.JLabel DateOccLabel;
    private javax.swing.JLabel DateOccLabel1;
    private javax.swing.JPanel DefaultPanel;
    private javax.swing.JLabel DescTextLabel;
    private javax.swing.JLabel DescTextLabel1;
    private javax.swing.JPanel DisplayPanel;
    private javax.swing.JButton ExitButton;
    private javax.swing.JDialog ExitDialog;
    private javax.swing.JTextField GardDivTextField;
    private javax.swing.JTextField GardDivTextField1;
    private javax.swing.JLabel GardaDivLabel;
    private javax.swing.JLabel GardaDivLabel1;
    private javax.swing.JPanel MasterPanel;
    private javax.swing.JButton MenuInsertButton;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JButton MenuRemoveButton;
    private javax.swing.JButton MenuUpdateButton;
    private javax.swing.JButton MenuViewButton;
    private javax.swing.JButton NoButton;
    private javax.swing.JLabel NumOfOffencesLabel;
    private javax.swing.JLabel NumOfOffencesLabel1;
    private javax.swing.JTextField OffCodeTextField;
    private javax.swing.JTextField OffCodeTextField1;
    private javax.swing.JLabel OffenceCodeLabel;
    private javax.swing.JLabel OffenceCodeLabel1;
    private javax.swing.JLabel OffenceLabel;
    private javax.swing.JLabel OffenceLabel1;
    private javax.swing.JTextField OffenceTextField;
    private javax.swing.JTextField OffenceTextField1;
    private javax.swing.JLabel RegionLabel;
    private javax.swing.JLabel RegionLabel1;
    private javax.swing.JTextField RegionTextField;
    private javax.swing.JTextField RegionTextField1;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JPanel TitlePanel;
    private javax.swing.JLabel TypeOffLabel;
    private javax.swing.JLabel TypeOffLabel1;
    private javax.swing.JList TypeOffTextField;
    private javax.swing.JList TypeOffTextField1;
    private javax.swing.JButton YesButton;
    private javax.swing.JButton acceptFormButton;
    private javax.swing.JButton acceptFormButton1;
    private javax.swing.JButton backToUpdateListButton;
    private javax.swing.JLabel barText;
    private javax.swing.JButton barchartButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JList dateList;
    private javax.swing.JList dateList1;
    private javax.swing.JScrollPane dateScrollList;
    private javax.swing.JScrollPane dateScrollList1;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel getFromDBText;
    private javax.swing.JPanel insertForm;
    private javax.swing.JLabel insertTxtFieldWrongType;
    private javax.swing.JLabel insertTxtFieldWrongType1;
    private javax.swing.JLabel insertTxtFieldWrongType10;
    private javax.swing.JLabel insertTxtFieldWrongType11;
    private javax.swing.JLabel insertTxtFieldWrongType12;
    private javax.swing.JLabel insertTxtFieldWrongType13;
    private javax.swing.JLabel insertTxtFieldWrongType2;
    private javax.swing.JLabel insertTxtFieldWrongType3;
    private javax.swing.JLabel insertTxtFieldWrongType4;
    private javax.swing.JLabel insertTxtFieldWrongType5;
    private javax.swing.JLabel insertTxtFieldWrongType6;
    private javax.swing.JLabel insertTxtFieldWrongType7;
    private javax.swing.JLabel insertTxtFieldWrongType8;
    private javax.swing.JLabel insertTxtFieldWrongType9;
    private javax.swing.JLabel introText;
    private javax.swing.JLabel introText1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField numOfOffencesTextField;
    private javax.swing.JTextField numOfOffencesTextField1;
    private javax.swing.JLabel picLabel1;
    private javax.swing.JLabel picLabel2;
    private javax.swing.JLabel picLabel3;
    private javax.swing.JButton piechartButton;
    private javax.swing.JLabel piechartText;
    private javax.swing.JButton projectedButton;
    private javax.swing.JLabel projectedText;
    private javax.swing.JScrollPane recordList;
    private javax.swing.JScrollPane recordList1;
    private javax.swing.JTable recordTable;
    private javax.swing.JTable recordTable1;
    private javax.swing.JButton refreshRemoveButton;
    private javax.swing.JButton refreshUpdateButton;
    private javax.swing.JButton returnToInsertButton;
    private javax.swing.JLabel successLabel;
    private javax.swing.JLabel successLabel1;
    private javax.swing.JPanel successPanel;
    private javax.swing.JLabel text;
    private javax.swing.JButton updateButton;
    private javax.swing.JPanel updateFormPanel;
    private javax.swing.JPanel updateTablePanel;
    private javax.swing.JLabel userInsertedLabel;
    private javax.swing.JPanel viewBeforePanel;
    private javax.swing.JLabel viewText;
    // End of variables declaration//GEN-END:variables
}
